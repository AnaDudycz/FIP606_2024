{
  "hash": "630611625cbad678130106b4d5d6a874",
  "result": {
    "markdown": "---\ntitle: \"Outros pacotes e funções na construção de gráficos\"\n---\n\n\n## Usando datapasta de dados a partir de uma tabela google\n\nO vetor 'comp' que contém 20 valores numéricos representando a concentração do composto em diferentes experimentos. O objeto data.table em R armazena os dados experimentais sobre a concentração de um composto (comp) em diferentes tratamentos (trat) e repetições (rep).\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-1_7d9e23911d49d144b6a12b406404eba3'}\n\n```{.r .cell-code}\ncomp <- (c(9, 12.5, 10, 8, 13.2, 11, 10.8, 9.5, 10.8, 10.4, 13.72, 15.91, 15.7, 14.2, 15.9, 16.54, 18, 14.4, 16.41, 16)\n)\n\ndata.table::data.table(\n        trat = c(\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\n                 \"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"control\",\"control\",\"control\",\n                 \"control\",\"control\",\"control\",\"control\",\"control\",\"control\",\n                 \"control\"),\n         rep = c(1L,2L,3L,4L,5L,6L,7L,8L,9L,10L,1L,\n                 2L,3L,4L,5L,6L,7L,8L,9L,10L),\n        comp = c(9,12.5,10,8,13.2,11,10.8,9.5,10.8,\n                 10.4,13.72,15.91,15.7,14.2,15.9,16.54,18,14.4,16.41,\n                 16)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       trat   rep  comp\n     <char> <int> <num>\n 1:     Mg2     1  9.00\n 2:     Mg2     2 12.50\n 3:     Mg2     3 10.00\n 4:     Mg2     4  8.00\n 5:     Mg2     5 13.20\n 6:     Mg2     6 11.00\n 7:     Mg2     7 10.80\n 8:     Mg2     8  9.50\n 9:     Mg2     9 10.80\n10:     Mg2    10 10.40\n11: control     1 13.72\n12: control     2 15.91\n13: control     3 15.70\n14: control     4 14.20\n15: control     5 15.90\n16: control     6 16.54\n17: control     7 18.00\n18: control     8 14.40\n19: control     9 16.41\n20: control    10 16.00\n       trat   rep  comp\n```\n:::\n:::\n\n\n## Dados a partir da web\n\nA função tribble() do pacote tibble também pode ser usada para organizar os dados em uma tabela.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-2_b31da6257d64b7006c0657b6a9330d4e'}\n\n```{.r .cell-code}\ntibble::tribble(\n  ~`1`,          ~Brazil, ~`4,303`,\n    2L,     \"Mozambique\",      43L,\n    3L,       \"Portugal\",      33L,\n    4L,  \"United States\",      23L,\n    5L,         \"Angola\",      19L,\n    6L,          \"Spain\",      16L,\n    7L,      \"(not set)\",      12L,\n    8L,       \"Colombia\",       8L,\n    9L,        \"Germany\",       5L,\n   10L,        \"Hungary\",       5L,\n   11L, \"United Kingdom\",       5L,\n   12L,    \"Netherlands\",       4L,\n   13L,        \"Ecuador\",       3L,\n   14L,         \"France\",       3L,\n   15L,          \"Chile\",       2L,\n   16L,       \"Paraguay\",       2L,\n   17L,           \"Peru\",       2L,\n   18L,      \"Argentina\",       1L,\n   19L,        \"Austria\",       1L,\n   20L,        \"Bolivia\",       1L,\n   21L,     \"Cape Verde\",       1L,\n   22L,          \"China\",       1L,\n   23L,          \"Egypt\",       1L,\n   24L,        \"Finland\",       1L,\n   25L,          \"India\",       1L,\n   26L,          \"Italy\",       1L,\n   27L,       \"Malaysia\",       1L,\n   28L,       \"Pakistan\",       1L,\n   29L,         \"Poland\",       1L,\n   30L,      \"Singapore\",       1L,\n   31L,    \"Timor-Leste\",       1L,\n   32L,        \"Uruguay\",       1L\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 31 × 3\n     `1` Brazil         `4,303`\n   <int> <chr>            <int>\n 1     2 Mozambique          43\n 2     3 Portugal            33\n 3     4 United States       23\n 4     5 Angola              19\n 5     6 Spain               16\n 6     7 (not set)           12\n 7     8 Colombia             8\n 8     9 Germany              5\n 9    10 Hungary              5\n10    11 United Kingdom       5\n# ℹ 21 more rows\n```\n:::\n:::\n\n\nO pacote tiyverse pode ser usado para a remodelagem dos dados. A função pivot_longer() permite passar os dados do formato largo para o formato longo. A função annotate do pacote ggplot2 em R é usada para adicionar anotações personalizadas aos gráficos, como textos para destacar ou explicar partes específicas de um gráfico.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-3_df37772f6310435a7045adf9095e5c32'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\npepper <- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  )\n\npepper |> \n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\") |>\n  ggplot(aes(t, inc, color = epidemic)) +\n  geom_point() +\n  geom_line() +\n  annotate(geom = \"text\",\n           x = 12,\n           y = 0.75,\n           label =\"1\")+\n annotate(geom = \"text\",\n           x = 25,\n           y = 0.75,\n           label =\"2\")+\n   annotate(geom = \"text\",\n           x = 47,\n           y = 0.75,\n           label =\"3\")+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Tabela de contingência\n\nUma tabela de contingência é uma forma de resumir e visualizar a distribuição conjunta de duas ou mais variáveis categóricas. Ela mostra como as frequências ou contagens são distribuídas entre as diferentes categorias de cada uma das variáveis, permitindo analisar relações e associações entre elas.\n\no conjunto de dados cr que foi lido do arquivo CSV e usar o pacote janitor para criar uma tabela de contingência e ggplot2 para criar gráficos.\n\ncriou-se uma tabela de contingência para as variáveis cultivar e farm_management usando tabyl.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-4_1421988e32235517416f55a16c5b5655'}\n\n```{.r .cell-code}\nlibrary(ggthemes)\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\ncr |>\n  count(farm_management, cultivar) |>\n  ggplot(aes(cultivar, n, fill = farm_management,\n             label = n)) +\n  geom_col(position = \"dodge2\")+\n  scale_fill_colorblind()+\n  theme_bw()+\n  theme(strip.text.x=element_blank(),\n        legend.position = \"top\")+\n  geom_text(position = position_dodge(width = 0.9))+\n  facet_wrap(~cultivar, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n\ncr |>\n  tabyl(cultivar, farm_management)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n cultivar Intensive Minimal Moderate Unmanaged\n Improved        83       0        0         0\n    Local         0      10        4       102\n  Mixture        82      59       65         0\n```\n:::\n:::\n\n\n## geom_errorbar\n\nO geom_errorbar() é uma função do pacote ggplot2 que permite adicionar barras de erro a um gráfico. Essas barras de erro são frequentemente usadas para representar a variabilidade ou incerteza associada às medições feitas em um conjunto de dados.\n\n\n::: {.cell hash='Aula4_cache/html/unnamed-chunk-5_4f8a16f9eaedaaa8b76a05d3db61e0f9'}\n\n```{.r .cell-code}\nlibrary(gsheet)\nmg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n\nmg |>\n  group_by(trat) |>\n  summarise(mean_comp = mean(comp)) |>\n  ggplot(aes(trat,mean_comp))+\n  geom_col(fill = \"steelblue\", width =0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngeom_errorbar(aes(ymin = mean_comp - sd_comp,\n                  ymax = mean_comp + sd_comp),\n              width = 0.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmapping: ymin = ~mean_comp - sd_comp, ymax = ~mean_comp + sd_comp \ngeom_errorbar: na.rm = FALSE, orientation = NA, width = 0.1\nstat_identity: na.rm = FALSE\nposition_identity \n```\n:::\n\n```{.r .cell-code}\nmg |>\n  group_by(trat) |>\n  summarise(\n    mean_comp = mean(comp),\n    sd_comp = sd(comp)) |>\n  ggplot(aes(x = trat, y = mean_comp)) +\n  geom_point(size = 3) +\n  ylim(5, 20) +\n  geom_errorbar(aes(ymin = mean_comp - sd_comp, ymax = mean_comp + sd_comp), width = 0.2) +\n  annotate(geom = \"text\", x = 1, y = 17.5, label = \"*\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\nmg |>\n  ggplot(aes(trat,comp))+\n  geom_jitter(width =0.1)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}