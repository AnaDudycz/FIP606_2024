{
  "hash": "0be8790682cf8b1900e834bce6855cbe",
  "result": {
    "markdown": "---\ntitle: \"Anova com DBC\"\n---\n\n\n## Anova com blocos casualizados\n\nDelineamento experimental que contém o terceiro príncipio da experimentação, que é o controle local. Este delineamento reduz as fontes de variação, com isso o erro experimental também é reduzido (não favorece um tratamento em detrimento de outro).\n\n## Importar os dados\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-1_a00838dbede385605df37b16d3d98fa2'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gsheet)\n\nsoja <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\nsoja <- soja |>\n  mutate(TRAT = as.factor(TRAT),\n         BLOCO = as.factor(BLOCO))\n```\n:::\n\n\n## Visualizar os dados\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-2_ac560f3fab4d8dc5f1c42f6c4f354111'}\n\n```{.r .cell-code}\ndfc<- soja |>\n  ggplot(aes(TRAT, DFC))+\n  geom_jitter(width= 0.05, color=\n                \"gray70\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size=0.5, color=\n                 \"black\", alpha= 0.05)\ndfc\n```\n\n::: {.cell-output-display}\n![](Aula9_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfer <- soja |>\n  ggplot(aes(TRAT, FER))+\n  geom_jitter(width= 0.05, color=\n                \"gray70\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size=0.5, color=\n                 \"black\", alpha= 0.05)\nfer\n```\n\n::: {.cell-output-display}\n![](Aula9_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\nprod <- soja |>\n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width= 0.05, color=\n                \"gray70\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size=0.5, color=\n                 \"black\", alpha= 0.05)\nprod\n```\n\n::: {.cell-output-display}\n![](Aula9_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(ggpubr)\nggarrange(dfc,fer,prod, ncol=3,nrow=1)\n```\n\n::: {.cell-output-display}\n![](Aula9_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n:::\n\n\n## Anova para a variável DFC\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-3_e10d7912f6993a350a4c2470a860b1b0'}\n\n```{.r .cell-code}\naov_dfc <- lm(DFC ~ TRAT + BLOCO,\n              data = soja)\nanova(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: DFC\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 149.299 21.3284 51.5490 8.218e-12 ***\nBLOCO      3   0.461  0.1537  0.3716    0.7743    \nResiduals 21   8.689  0.4138                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.532).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.978).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_dfc <- emmeans(aov_dfc, ~TRAT)\nmedias_dfc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean    SE df lower.CL upper.CL\n 1     10.88 0.322 21    10.21    11.54\n 2      6.42 0.322 21     5.76     7.09\n 3      6.05 0.322 21     5.38     6.72\n 4      4.75 0.322 21     4.08     5.42\n 5      4.20 0.322 21     3.53     4.87\n 6      4.00 0.322 21     3.33     4.67\n 7      4.08 0.322 21     3.41     4.74\n 8      4.58 0.322 21     3.91     5.24\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7       8\n1 [10.87]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2   4.450 [ 6.42]  0.9896  0.0249  0.0017  0.0006  0.0009  0.0107\n3   4.825   0.375 [ 6.05]  0.1329  0.0107  0.0040  0.0058  0.0628\n4   6.125   1.675   1.300 [ 4.75]  0.9202  0.7173  0.8072  0.9999\n5   6.675   2.225   1.850   0.550 [ 4.20]  0.9998  1.0000  0.9896\n6   6.875   2.425   2.050   0.750   0.200 [ 4.00]  1.0000  0.9020\n7   6.800   2.350   1.975   0.675   0.125  -0.075 [ 4.07]  0.9499\n8   6.300   1.850   1.475   0.175  -0.375  -0.575  -0.500 [ 4.57]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\nlibrary(writexl)\nlibrary(multcomp)\ncld2 <- cld(medias_dfc, Letters = LETTERS)\nwrite_xlsx (cld2, \"df.xlsx\" )\n```\n:::\n\n\n## Anova para a variável FER\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-4_da7cca8e4f878cd072d0359cbc5e1c63'}\n\n```{.r .cell-code}\naov_fer <- lm(FER2 <- log(FER) ~ TRAT + BLOCO,\n              data = soja)\nanova(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: log(FER)\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 11.5210 1.64585 42.9665 4.838e-11 ***\nBLOCO      3  0.2064 0.06880  1.7961    0.1788    \nResiduals 21  0.8044 0.03831                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.035).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.255).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_fer <- emmeans(aov_fer, ~TRAT, type = \"response\")\nmedias_fer\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT response    SE df lower.CL upper.CL\n 1       20.02 1.959 21    16.33    24.54\n 2        5.68 0.556 21     4.63     6.96\n 3        3.81 0.373 21     3.11     4.67\n 4        3.08 0.301 21     2.51     3.78\n 5        3.24 0.317 21     2.64     3.97\n 6        2.98 0.292 21     2.43     3.65\n 7        3.37 0.330 21     2.75     4.13\n 8        3.48 0.341 21     2.84     4.27\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7       8\n1 [20.02]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2   3.525 [ 5.68]  0.1252  0.0048  0.0110  0.0028  0.0204  0.0343\n3   5.259   1.492 [ 3.81]  0.7832  0.9335  0.6440  0.9843  0.9976\n4   6.500   1.844   1.236 [ 3.08]  0.9999  1.0000  0.9976  0.9842\n5   6.178   1.753   1.175   0.951 [ 3.24]  0.9984  1.0000  0.9994\n6   6.721   1.906   1.278   1.034   1.088 [ 2.98]  0.9842  0.9431\n7   5.945   1.686   1.130   0.915   0.962   0.885 [ 3.37]  1.0000\n8   5.750   1.631   1.093   0.885   0.931   0.856   0.967 [ 3.48]\n\nRow and column labels: TRAT\nUpper triangle: P values   null = 1  adjust = \"tukey\"\nDiagonal: [Estimates] (response)   type = \"response\"\nLower triangle: Comparisons (ratio)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\ncld(medias_fer, Letters = LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT response    SE df lower.CL upper.CL .group\n 6        2.98 0.292 21     2.43     3.65  A    \n 4        3.08 0.301 21     2.51     3.78  A    \n 5        3.24 0.317 21     2.64     3.97  A    \n 7        3.37 0.330 21     2.75     4.13  A    \n 8        3.48 0.341 21     2.84     4.27  A    \n 3        3.81 0.373 21     3.11     4.67  AB   \n 2        5.68 0.556 21     4.63     6.96   B   \n 1       20.02 1.959 21    16.33    24.54    C  \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \nP value adjustment: tukey method for comparing a family of 8 estimates \nTests are performed on the log scale \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n\n```{.r .cell-code}\nb <- boxcox(lm(soja$FER ~1))\n```\n\n::: {.cell-output-display}\n![](Aula9_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlambda <- b$x[which.max(b$y)]\nlambda\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -1.555556\n```\n:::\n\n```{.r .cell-code}\nsoja$FER2 <- (soja$FER ^lambda - 1) / lambda\n```\n:::\n\n\n## Anova para a variável PROD\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-5_a38a3f2eb1cb7865847adaa84b2b150a'}\n\n```{.r .cell-code}\naov_prod <- lm(PROD ~ TRAT + BLOCO,\n              data = soja)\n\nlibrary(agricolae)\ncv.model(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8.057402\n```\n:::\n\n```{.r .cell-code}\nanova(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: PROD\n          Df  Sum Sq Mean Sq F value  Pr(>F)  \nTRAT       7 2993906  427701  2.6367 0.04021 *\nBLOCO      3  105665   35222  0.2171 0.88340  \nResiduals 21 3406431  162211                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.215).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.542).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_prod <- emmeans(aov_prod, ~TRAT)\nmedias_prod\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.3  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.3  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.3    31.7    62.0    43.7   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\nmedias_prod_grupo <- cld(medias_prod, Letters = LETTERS)\nmedias_prod_grupo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean  SE df lower.CL upper.CL .group\n 1      4219 201 21     3800     4638  A    \n 2      4935 201 21     4516     5354  AB   \n 8      5078 201 21     4659     5497  AB   \n 3      5110 201 21     4691     5529  AB   \n 5      5122 201 21     4703     5541  AB   \n 7      5128 201 21     4709     5546  AB   \n 4      5140 201 21     4721     5559  AB   \n 6      5256 201 21     4837     5675   B   \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\n## Visualização das médias e barra de erro.\n\nO pacote writexl e função write_xlsx() permitem exportar data frames para o formato Excel, permitindo que os dados sejam facilmente compartilhados e analisados em outras plataformas.\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-6_e01712a6f424e78236d365898bd1fda7'}\n\n```{.r .cell-code}\ndf_prod <- data.frame(medias_prod_grupo)\ndf_prod |>\n  ggplot(aes(TRAT, emmean))+\n  geom_point()+\n  ylim(3000,6500)+\n  geom_errorbar(aes(min = lower.CL,\n                    max = upper.CL),\n                width = 0.1)+\nannotate(geom = \"text\", x = 1.2, y = 4200,\n         label = \"A\")\n```\n\n::: {.cell-output-display}\n![](Aula9_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nknitr::kable(df_prod |> dplyr::select(TRAT, emmean, .group))\n```\n\n::: {.cell-output-display}\n|   |TRAT |  emmean|.group |\n|:--|:----|-------:|:------|\n|1  |1    | 4219.25|A      |\n|2  |2    | 4935.00|AB     |\n|8  |8    | 5078.25|AB     |\n|3  |3    | 5110.00|AB     |\n|5  |5    | 5122.00|AB     |\n|7  |7    | 5127.50|AB     |\n|4  |4    | 5140.25|AB     |\n|6  |6    | 5256.25|B      |\n:::\n\n```{.r .cell-code}\nlibrary(writexl)\nwrite_xlsx(df_prod, \"df.xlsx\")\n```\n:::\n\n\n## Dados de severidade\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-7_2674fdde0615eb4c3d32bd5c1f7cecea'}\n\n```{.r .cell-code}\ncurve <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585\")\n```\n:::\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-8_0b5c6ae3f2884c518ab7f7060a2923fb'}\n\n```{.r .cell-code}\ncurve |> \n  group_by(day, Irrigation) |> \n  summarise(mean_sev = mean(severity)) |> \n  ggplot(aes(day, mean_sev)) +\n   geom_point(which = 0.05)+ \n  geom_line()+\n  facet_wrap(~~Irrigation)\n```\n\n::: {.cell-output-display}\n![](Aula9_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Cálculo da Área Abaixo da Curva de progressoo da Doença (AACPD)\n\nCriando uma nova variável na planilha (chamada AACPD). Então, pode-se calcular a anova a partir dessa variável (AACPD).\n\n\n::: {.cell hash='Aula9_cache/html/unnamed-chunk-9_b64c31fd56fa681f0a80c6e6f996ce5b'}\n\n```{.r .cell-code}\nlibrary(epifitter)\ncurve2 <- curve |>\n  group_by(Irrigation, rep) |>\n  summarise(aacpd = AUDPC(day,severity))\n\nm_curve <- lm(aacpd ~Irrigation + factor(rep),\n              data = curve2)\n\nanova(m_curve) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: aacpd\n            Df  Sum Sq  Mean Sq F value  Pr(>F)  \nIrrigation   1 0.23602 0.236017  10.605 0.08275 .\nfactor(rep)  2 0.61291 0.306454  13.771 0.06770 .\nResiduals    2 0.04451 0.022254                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(agricolae)\ncv.model(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.097572\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}