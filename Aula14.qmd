---
title: "Mapas"
format: html
editor: visual
---

Os pacotes rnaturalearth e rnaturalearthhires podem ser usados para construção de mapas no R.

```{r}
library(rnaturalearth)
library(remotes)

##remotes::install_github("ropensci/rnaturalearthhires")
##install.packages("rnaturalearthhires", repos = "https://ropensc")

library(rnaturalearthhires)
library(ggplot2)
```

## Mapa do Brasil

```{r}

BRA <- ne_states(country = "Brazil",
                 returnclass = "sf")

world <- ne_countries()

#library(tidyverse)
ggplot(BRA) +
  geom_sf(fill = "white")

ggplot(BRA) +
  geom_sf(fill = "black",
          color = "yellow",
          linewidth =1)


```

## Mapa do Peru

```{r}

BRA <- ne_states(country = "Peru",
                 returnclass = "sf")

world <- ne_countries()

#library(tidyverse)
ggplot(BRA) +
  geom_sf(fill = "white")

```

## Mapa da Colômbia

```{r}

BRA <- ne_states(country = "Colombia",
                 returnclass = "sf")

world <- ne_countries()

#library(tidyverse)
ggplot(BRA) +
  geom_sf(fill = "white")



```

## Mapa com marcações

```{r}

library(r4pde)

sbr <- RustSoybean


sbr |> 
  ggplot(aes(longitude, latitude)) +
  geom_point() +
  coord_sf()


# juntar a camada de ponto e sobrepor o mapa


library(ggthemes)

BRA <- ne_states(country = "Brazil",
                 returnclass = "sf")

world <- ne_countries()

#library(tidyverse)
ggplot(BRA) +
  geom_sf(fill = "white")

ggplot(BRA) +
  geom_sf(fill = "black",
          color = "yellow",
          linewidth =1) +
  geom_point(data = sbr, aes(longitude, latitude),
             color = "white") +
  theme_map()


```

# Destacando um Estado

```{r}
library(dplyr)

BRA <- ne_states(country = "Brazil",
                 returnclass = "sf")

MG <- BRA |> 
  filter(name_en == "Minas Gerais")

ggplot(BRA) +
  geom_sf(fill = "white")

ggplot(BRA) +
  geom_sf(fill = "black",
          color = "yellow",
          linewidth =1) +
  geom_sf(data = MG, fill = "white") +
  geom_point(data = sbr, aes(longitude, latitude),
             color = "red") +
  theme_map()

```

# Mapa do Estado de MG

```{r}

ggplot(BRA)  +
  geom_sf(data = MG, fill = "white") +
 # geom_point(data = sbr, aes(longitude, latitude),
            # color = "red") +
  theme_map()


```

# Colocando a rosa dos ventos

```{r}

library(ggspatial)

ggplot(BRA) +
  geom_sf(fill = "white")

ggplot(BRA) +
  geom_sf(fill = "black",
          color = "white",
          linewidth = 0.3) +
 # geom_sf(data = MG, fill = "white") +
  geom_point(data = sbr, aes(longitude, latitude),
             color = "white") +
  theme_map() +
  annotation_north_arrow(which_north = "grid")


```

## Mapa interativo

```{r}

bra <-ggplot(BRA) +
  geom_sf(fill = "black",
          color = "white",
          linewidth = 0.3) +
 geom_sf(data = MG, fill = "black") +
  geom_point(data = sbr, aes(longitude, latitude),
             color = "white") +
  theme_map() +
  annotation_north_arrow(which_north = "grid")

library(plotly)
ggplotly(bra)

```

# Localizando uma cidade: Viçosa

```{r}

library(leaflet)
leaflet() |> 
  addTiles() |> 
  setView(lng = -42.8825 , lat = -20.7546, zoom = 15)


```

# Localizando uma Região/Estado

```{r}


library(leaflet)
leaflet() |> 
  addProviderTiles(providers$Esri.NatGeoWorldMap) |> 
  setView(lng = -42.8825 , lat = -20.7546, zoom = 5)

```

# Adicionando pontos

```{r}


library(leaflet)
leaflet(sbr) |> 
  addTiles() |> 
  setView(lng = -42.8825 , lat = -20.7546, zoom = 5) |> 
  addMarkers()
  

```

## Mapa com gráficos

```{r}
library(ggplot2)
library(gsheet)
library(scatterpie)
library(ggrepel)

mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")

ggplot(BRA) +
  geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
  coord_sf()+
  geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
                  cols = c("DFC",
                           "MA",
                           "FER",
                           "ANTR",
                           "OIDIO"))+
  geom_text_repel(data = mapa, aes(lon, lat, label = Local),
                   size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
  ggthemes::scale_fill_calc()+
  ggthemes::theme_map() +
  labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
  theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
```
